diff -u -r x/frama-c-19.1-Potassium/src/plugins/wp/GuiNavigator.ml y/frama-c-19.1-Potassium/src/plugins/wp/GuiNavigator.ml
--- x/frama-c-19.1-Potassium/src/plugins/wp/GuiNavigator.ml	2019-09-17 02:00:00.000000000 +0200
+++ y/frama-c-19.1-Potassium/src/plugins/wp/GuiNavigator.ml	2019-11-12 06:58:32.277875532 +0100
@@ -239,11 +239,9 @@
           Task.spawn server thread ;
           Task.launch server in
         match prover with
-        (*
         | VCS.Why3ide ->
             let iter f = Wpo.iter ~on_goal:f () in
             schedule (ProverWhy3ide.prove ~callback:result ~iter)
-        *)
         | VCS.Tactical ->
             begin
               match mode , ProverScript.get w with
@@ -303,12 +301,10 @@
       match popup_target with
       | Some(w,Some p) -> (popup_target <- None ; self#prove ~mode w p)
       | _ -> popup_target <- None
-(*
     method private popup_why3ide () =
       match popup_target with
       | Some(w,_) -> (popup_target <- None ; self#prove w VCS.Why3ide)
       | _ -> popup_target <- None
-*)
     method private add_popup_delete popup =
       begin
         popup#add_separator ;
@@ -333,13 +329,11 @@
           [ "Run",BatchMode ; "Open Altgr-Ergo on Fail",EditMode ; "Open Altgr-Ergo",EditMode ] ;
         self#add_popup_proofmodes popup_coq
           [ "Check Proof",BatchMode ; "Edit on Fail",EditMode ; "Edit Proof",EditMode ] ;
-        (*
         List.iter
           (fun menu ->
              menu#add_item ~label:"Open Why3ide" ~callback:self#popup_why3ide ;
              self#add_popup_delete menu ;
           ) [ popup_qed ; popup_why3 ; popup_ergo ; popup_coq ] ;
-        *)
       end

     method private popup w p =
diff -u -r x/frama-c-19.1-Potassium/src/plugins/wp/register.ml y/frama-c-19.1-Potassium/src/plugins/wp/register.ml
--- x/frama-c-19.1-Potassium/src/plugins/wp/register.ml	2019-09-17 02:00:00.000000000 +0200
+++ y/frama-c-19.1-Potassium/src/plugins/wp/register.ml	2019-11-12 06:57:00.897816913 +0100
@@ -513,10 +513,8 @@
       (fun pname prvs ->
          match VCS.prover_of_name pname with
          | None -> prvs
-         (*
          | Some VCS.Why3ide ->
              mode.why3ide <- true; prvs
-         *)
          | Some VCS.Tactical ->
              mode.tactical <- true ;
              if pname = "tip" then mode.update <- true ;
@@ -628,10 +626,8 @@
   let spawned = mode.why3ide || mode.tactical || mode.provers <> [] in
   begin
     if spawned then do_list_scheduled iter ;
-    (*
     if mode.why3ide then
       launch (ProverWhy3ide.prove ~callback:do_why3_result ~iter) ;
-    *)
     spawn_wp_proofs_iter ~mode iter ;
     if spawned then
       begin
diff -u -r x/frama-c-19.1-Potassium/src/plugins/wp/VCS.ml y/frama-c-19.1-Potassium/src/plugins/wp/VCS.ml
--- x/frama-c-19.1-Potassium/src/plugins/wp/VCS.ml	2019-09-17 02:00:00.000000000 +0200
+++ y/frama-c-19.1-Potassium/src/plugins/wp/VCS.ml	2019-11-12 06:58:00.317856240 +0100
@@ -31,7 +31,7 @@

 type prover =
   | Why3 of string (* Prover via WHY *)
-  (*  | Why3ide  *)
+  | Why3ide
   | AltErgo       (* Alt-Ergo *)
   | Coq           (* Coq and Coqide *)
   | Qed           (* Qed Solver *)
@@ -54,16 +54,16 @@
   | "coq" | "coqide" -> Some Coq
   | "script" -> Some Tactical
   | "tip" -> Some Tactical
-  (* | "why3ide" -> Some Why3ide *)
+  | "why3ide" -> Some Why3ide
   | s ->
       match Extlib.string_del_prefix "why3:" s with
       | Some "" -> None
-      (* | Some "ide" -> Some Why3ide*)
+      | Some "ide" -> Some Why3ide
       | Some s' -> Some (Why3 s')
       | None -> Some (Why3 s)

 let name_of_prover = function
-  (*  | Why3ide -> "why3ide" *)
+  | Why3ide -> "why3ide"
   | Why3 s -> "why3:" ^ s
   | AltErgo -> "alt-ergo"
   | Coq -> "coq"
@@ -75,7 +75,7 @@
   | Why3 "z3" -> "Z3"
   | Why3 ("alt-ergo" | "altergo") -> "Alt-Ergo (why3)"
   | Why3 s -> Printf.sprintf "Why3 (%s)" s
-  (*  | Why3ide -> "Why3 (ide)" *)
+  | Why3ide -> "Why3 (ide)"
   | AltErgo -> "Alt-Ergo"
   | Coq -> "Coq"
   | Qed -> "Qed"
@@ -102,7 +102,7 @@

 let filename_for_prover = function
   | Why3 s -> sanitize_why3 s
-  (*  | Why3ide -> "Why3_ide" *)
+  | Why3ide -> "Why3_ide"
   | AltErgo -> "Alt-Ergo"
   | Coq -> "Coq"
   | Qed -> "Qed"
@@ -110,7 +110,7 @@

 let language_of_prover = function
   | Why3 _ -> L_why3
-  (*  | Why3ide -> L_why3 *)
+  | Why3ide -> L_why3
   | Coq -> L_coq
   | AltErgo -> L_altergo
   | Qed | Tactical -> L_why3
diff -u x/frama-c-19.1-Potassium/src/plugins/wp/ProverWhy3ide.ml y/frama-c-19.1-Potassium/src/plugins/wp/ProverWhy3ide.ml
--- x/frama-c-19.1-Potassium/src/plugins/wp/ProverWhy3ide.ml	2019-11-12 23:23:59.993268951 +0100
+++ y/frama-c-19.1-Potassium/src/plugins/wp/ProverWhy3ide.ml	2019-11-14 21:06:38.519081839 +0100
@@ -149,6 +149,21 @@
   with Not_found ->
     Wp_parameters.warning "[why3] Skipped %a" Xml.pretty e

+let rec parse_path_components l =
+  let open Xml in
+  match l with
+    | [] -> []
+    | e :: l ->
+      let l = parse_path_components l in
+      match e.name with
+      | "path" -> List.assoc "name" e.attributes :: l
+      | _ -> l
+
+let parse_file_name e =
+  let open Xml in
+  match List.assoc_opt "name" e.attributes with
+    | Some file -> file
+    | None -> String.concat "/" (parse_path_components e.elements)

 let parse_session env e =
   let open Xml in
@@ -157,7 +172,7 @@
     | "prover" -> parse_prover env e
     | "file" ->
         begin
-          let file = List.assoc "name" e.attributes in
+          let file = parse_file_name e in
           let path = Filepath.normalize ~base_name:env.session file in
           let file = Filepath.relativize path in
           List.iter (parse_file env file) e.elements
@@ -186,7 +201,7 @@

 let prove ?callback ~iter =
   let output = Wp_parameters.get_output () in
-  let session = output ^ "/project.session" in
+  let session = output ^ "/project.session/" in
   let env = {
     files = Files.empty ;
     includes = Files.empty ;
@@ -202,7 +217,7 @@
     begin fun ok ->
       if ok then
         begin
-          let file = session ^ "/why3session.xml" in
+          let file = session ^ "why3session.xml" in
           if Sys.file_exists file then
             let xml = Why3_xml.from_file file in
             parse env xml
diff -u x/frama-c-19.1-Potassium/src/plugins/wp/VCS.mli y/frama-c-19.1-Potassium/src/plugins/wp/VCS.mli
--- x/frama-c-19.1-Potassium/src/plugins/wp/VCS.mli     2019-09-17 02:00:00.000000000 +0200
+++ y/frama-c-19.1-Potassium/src/plugins/wp/VCS.mli     2019-11-12 07:03:58.458015040 +0100
@@ -28,6 +28,7 @@

 type prover =
   | Why3 of string (* Prover via WHY *)
+  | Why3ide       (* why3 ide *)
   | AltErgo       (* Alt-Ergo *)
   | Coq           (* Coq and Coqide *)
   | Qed           (* Qed Solver *)
